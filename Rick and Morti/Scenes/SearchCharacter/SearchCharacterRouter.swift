//
//  SearchCharacterRouter.swift
//  Rick and Morti
//
//  Created by Youchen Zhou on 10/2/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol SearchCharacterRoutingLogic
{
  func routeToShowSearchCharacterList(segue: UIStoryboardSegue?)
}

protocol SearchCharacterDataPassing
{
  var dataStore: SearchCharacterDataStore? { get }
}

class SearchCharacterRouter: NSObject, SearchCharacterRoutingLogic, SearchCharacterDataPassing
{
    weak var viewController: SearchCharacterViewController?
    var dataStore: SearchCharacterDataStore?
    
    // MARK: Routing
    
    func routeToShowSearchCharacterList(segue: UIStoryboardSegue?){
        if let segue = segue {
            let destinationVC = segue.destination as! SearchCharacterListViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToShowSearchCharacterList(source: dataStore!, destination: &destinationDS)
        } else {
            let storyboard = UIStoryboard(name: "Main", bundle: nil)
            let destinationVC = storyboard.instantiateViewController(withIdentifier: "SomewhereViewController") as! SearchCharacterListViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToShowSearchCharacterList(source: dataStore!, destination: &destinationDS)
            navigateToShowSearchCharacterList(source: viewController!, destination: destinationVC)
        }
    }
    
    // MARK: Navigation
    
    func navigateToShowSearchCharacterList(source: SearchCharacterViewController, destination: SearchCharacterListViewController)
    {
      source.show(destination, sender: nil)
    }
    
    // MARK: Passing data
    
    func passDataToShowSearchCharacterList(source: SearchCharacterDataStore, destination: inout SearchCharacterListDataStore)
    {
        destination.filter = source.searchFilter
    }

}
